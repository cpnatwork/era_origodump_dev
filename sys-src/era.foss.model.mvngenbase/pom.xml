<project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>era</groupId>
  <artifactId>foss.model.mvngenbase</artifactId>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>ERA FOSS Model Generation</name>
  <!--
  <properties>
    <cpn.someDemoProp>2.5.6.A</cpn.someDemoProp>
  </properties>
  -->
  <developers>
    <developer>
      <id>cpn</id>
      <name>Christoph Neumann</name>
      <email>christoph.neumann@informatik.uni-erlangen.de</email>
      <url>http://www6.informatik.uni-erlangen.de/people/cpn/</url>
      <organization>Uni Erlangen - Informatik 6</organization>
      <organizationUrl>
      http://www6.informatik.uni-erlangen.de/</organizationUrl>
    </developer>
  </developers>
  <pluginRepositories>
    <pluginRepository>
      <id>mapasuta.repo</id>
      <name>Mapasuta Project Download Repository</name>
      <url>http://mapasuta.sf.net/maven/repo</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <plugins>
      <plugin>
        <groupId>net.sf.mapasuta.build.maven.plugins</groupId>
        <artifactId>maven-emfgen-plugin</artifactId>
        <executions>
          <execution>
            <!-- this newest version will check the Eclipse Version and complain ... <version>1.0.1-SNAPSHOT</version>-->
            <configuration>
              <!-- BEGIN ECLIPSE for HEADLESS execution -->
              <eclipseDir>/proj.era/progs/eclipse</eclipseDir>
              <eclipseVersion>3.4.1</eclipseVersion>
              <!-- END ECLIPSE for HEADLESS execution -->
              <!-- BEGIN INPUT -->
              <metaModels>
                <!-- these are INput -->
                <metaModel>
                ${basedir}/src/genbase/ecore/rif.extended.ecore</metaModel>
              </metaModels>
              <packageUris>
                <!-- these must match the ecore-internal namespaces (for multi ecore-files support...!) -->
                <packageUri>
                http://automotive-his.de/schema/rif</packageUri>
              </packageUris>
              <!-- END INPUT -->
              <!-- BEGIN OUTPUT -->
              <!-- "temporary" Eclipse workspace for generator execution.
                            e.g. the log files from the generator run will be found in its .metadata directory -->
              <workspace>
              ${basedir}/target/wsp.headlesseclipse</workspace>
              <!-- This directory represents the resulting Eclipse plug-in .
                                UNFORTUNATELY the output cannot be produced in THIS same directory "${basedir}/./"
                                Prabably I am just too stupid...
                                -->
              <outputDirectory>
              ${basedir}/../era.foss.model.mvngenout</outputDirectory>
              <!-- The Eclipse project name (CPN says: should equal the outputDirectory's basename -->
              <modelProject>era.foss.model.mvngenout</modelProject>
              <!-- the src root folder of the generate Eclipse plug-in project -->
              <genSrc>src</genSrc>
              <!-- the genmodel is generated -->
              <!-- (WHY do WE require a patched genmodel file?? -->
              <genModel>rif.extended.genmodel</genModel>
              <!-- END OUTPUT -->
            </configuration>
            <!-- by default the "mvn emfgen:genmode" will be bound by the maven plug-in to generate-source -->
            <goals>
              <goal>genmodel</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
